# Generated by Django 4.2.7 on 2025-07-11 02:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=50, verbose_name='account name')),
                ('display', models.CharField(blank=True, max_length=50, verbose_name='display name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
                'db_table': 'commits_author',
                'unique_together': {('account', 'email')},
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('desc', models.CharField(blank=True, max_length=250, null=True, verbose_name='description')),
                ('url', models.CharField(max_length=500, verbose_name='repository url')),
                ('vcs_type', models.CharField(choices=[('svn', 'Subversion'), ('git', 'Git')], default='svn', max_length=10, verbose_name='VCS Type')),
                ('branch', models.CharField(blank=True, default='main', help_text='Git branch to monitor (default: main)', max_length=100, verbose_name='Branch')),
                ('username', models.CharField(blank=True, max_length=50, verbose_name='username')),
                ('password', models.CharField(blank=True, max_length=50, verbose_name='password')),
                ('ssh_key_path', models.CharField(blank=True, help_text='Path to SSH private key for Git repositories', max_length=500, verbose_name='SSH Key Path')),
                ('access_token', models.CharField(blank=True, help_text='GitHub/GitLab access token', max_length=500, verbose_name='Access Token')),
                ('sourceview', models.CharField(blank=True, max_length=500, null=True, verbose_name='source view')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Repository',
                'verbose_name_plural': 'Repositories',
                'db_table': 'commits_repository',
            },
        ),
        migrations.CreateModel(
            name='CommitLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision', models.CharField(max_length=100, verbose_name='revision/commit hash')),
                ('time', models.DateTimeField(verbose_name='commit time')),
                ('comment', models.TextField(verbose_name='commit comment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commits', to='commits.author')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commits', to='commits.repository')),
            ],
            options={
                'verbose_name': 'Commit Log',
                'verbose_name_plural': 'Commit Logs',
                'db_table': 'commits_commitlog',
                'ordering': ['-time'],
                'indexes': [models.Index(fields=['repository', 'time'], name='commits_com_reposit_2713f8_idx'), models.Index(fields=['author', 'time'], name='commits_com_author__541215_idx'), models.Index(fields=['time'], name='commits_com_time_254fb9_idx')],
                'unique_together': {('repository', 'revision')},
            },
        ),
    ]
